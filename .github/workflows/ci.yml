name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.sha }}

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
      - name: Code validation
        run: ./mvnw validate
      - name: Check code style
        run: ./mvnw checkstyle:check

  test:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
      - name: Run tests
        run: ./mvnw test
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports

  security-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP dependency check
        run: ./mvnw org.owasp:dependency-check-maven:check

  build-and-push:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$VERSION .
          docker push $REGISTRY/$IMAGE_NAME:$VERSION

      - name: Update deployment version
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"version": "'$VERSION'"}' \
          ${{ secrets.DEPLOYMENT_WEBHOOK_URL }}
